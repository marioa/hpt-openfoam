/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//# include "$FOAM_CASE/0/inputs"

boundary
{
    "wedge.*"
    {
        type            wedge;
    	  physicalType	  wedge;
    }
    /*wall
    {
        type            wall;
	      physicalType	  wall;
    }*/
    up
    {
        type            patch;
    }
    ref
    {
        type            patch;
    }
    /*up
    {
        type            externalWallHeatFluxTemperature;
	    physicalType	externalWallHeatFluxTemperature;
    }*/
    /*"steel_to_.*"
    {
        type           mappedPatchBase;//mappedWall;
        physicalType   mappedPatchBase;//mappedWall;
    }*/
}
T
{
    internalField   uniform 300;

    boundaryField
    {
        /*steel_to_fluid
            {
                type            compressible::turbulentTemperatureCoupledBaffleMixed;
                Tnbr            T;
                kappaMethod     solidThermo;
                //kappaName       none;//kappa;
                //thicknessLayers ();
                //kappaLayers     ();
                value           uniform 200;
            }*/
       ".*"
        {
            type            zeroGradient;
            value           uniform 300;
        }
        "steel_to_.*"
        {
            type            compressible::turbulentTemperatureCoupledBaffleMixed;
            Tnbr            T;
            kappaMethod     solidThermo;
            value           uniform 300;
        }
       up
            {
                type            fixedGradient; // change it to heat transfer with the room!!
                gradient        uniform 4;//$gradroom;
            }
       ref
            {
                type            fixedValue;
                value           uniform 300;//$Tref;
            }
       "wedge.*"
            {
                type            wedge;
          	    physicalType	  wedge;
            }
       steelwalls
            {
                type            zeroGradient;//wall;
	              //physicalType  	wall;
            }
    }
}

p
{
    internalField   uniform 1e5;
  
    boundaryField
    {
        "wedge.*"
        {
            type            wedge;
    	      physicalType	  wedge;
        }

    }
}

// ************************************************************************* //
